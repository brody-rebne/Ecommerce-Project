// <auto-generated />
using System;
using ECommerceLabWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerceLabWebApp.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20200513221926_seeding")]
    partial class seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerceLabWebApp.Models.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("ECommerceLabWebApp.Models.CartItems", b =>
                {
                    b.Property<string>("CartID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("CartID1")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("CartID", "ProductID");

                    b.HasIndex("CartID1");

                    b.HasIndex("ProductID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ECommerceLabWebApp.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Spicy Pickled Pigs Feet",
                            ImageUrl = "/../img/PigFeet.jpg",
                            Name = "Pigs Feet",
                            Price = 2m,
                            SKU = "12345"
                        },
                        new
                        {
                            ID = 2,
                            Description = "One package of delicous cheese",
                            ImageUrl = "/../img/cheese.jpg",
                            Name = "Cheese",
                            Price = 1m,
                            SKU = "23456"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Four raw eggs",
                            ImageUrl = "/../img/cheese.jpg",
                            Name = "Eggs",
                            Price = 5m,
                            SKU = "34567"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Small bag of Chicken and Waffles chips",
                            ImageUrl = "/../img/Chips.jpg",
                            Name = "Chips",
                            Price = 3m,
                            SKU = "45678"
                        },
                        new
                        {
                            ID = 5,
                            Description = "One medium sized bag of jerky",
                            ImageUrl = "/../img/Jerky.jpg",
                            Name = "Jerky",
                            Price = 7m,
                            SKU = "56789"
                        },
                        new
                        {
                            ID = 6,
                            Description = "One can of delicous Lutefisk",
                            ImageUrl = "/../img/Lutefisk.jpg",
                            Name = "Lutefisk",
                            Price = 8m,
                            SKU = "67890"
                        },
                        new
                        {
                            ID = 7,
                            Description = "High in protein",
                            ImageUrl = "/../img/Caterpillar.jpg",
                            Name = "Catepillars",
                            Price = 5m,
                            SKU = "78901"
                        },
                        new
                        {
                            ID = 8,
                            Description = "One bag of microwavable Pork Rinds",
                            ImageUrl = "/../img/PorkRindsjpg",
                            Name = "Pork Rinds",
                            Price = 3m,
                            SKU = "89012"
                        },
                        new
                        {
                            ID = 9,
                            Description = "America's Favorite!",
                            ImageUrl = "/../img/ViennaSausage.jpg",
                            Name = "Vienna Sausage",
                            Price = 1m,
                            SKU = "90123"
                        },
                        new
                        {
                            ID = 10,
                            Description = "One can of beans",
                            ImageUrl = "/../img/beans.jpg",
                            Name = "Beans",
                            Price = 1m,
                            SKU = "01235"
                        });
                });

            modelBuilder.Entity("ECommerceLabWebApp.Models.CartItems", b =>
                {
                    b.HasOne("ECommerceLabWebApp.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartID1");

                    b.HasOne("ECommerceLabWebApp.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
